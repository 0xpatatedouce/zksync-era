{
  "db_name": "PostgreSQL",
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c.json
  "query": "\n                    SELECT\n                        number,\n                        timestamp,\n                        l1_tx_count,\n                        l2_tx_count,\n                        bloom,\n                        priority_ops_onchain_data,\n                        hash,\n                        commitment,\n                        eth_prove_tx_id,\n                        eth_commit_tx_id,\n                        eth_execute_tx_id,\n                        merkle_root_hash,\n                        l2_to_l1_logs,\n                        l2_to_l1_messages,\n                        used_contract_hashes,\n                        compressed_initial_writes,\n                        compressed_repeated_writes,\n                        l2_l1_merkle_root,\n                        rollup_last_leaf_index,\n                        zkporter_is_available,\n                        bootloader_code_hash,\n                        default_aa_code_hash,\n                        evm_simulator_code_hash,\n                        aux_data_hash,\n                        pass_through_data_hash,\n                        meta_parameters_hash,\n                        protocol_version,\n                        compressed_state_diffs,\n                        system_logs,\n                        events_queue_commitment,\n                        bootloader_initial_content_commitment,\n                        pubdata_input\n                    FROM\n                        l1_batches\n                        LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n                    WHERE\n                        eth_prove_tx_id IS NOT NULL\n                        AND eth_execute_tx_id IS NULL\n                    ORDER BY\n                        number\n                    LIMIT\n                        $1\n                    ",
|||||||| 76a68217a:core/lib/dal/.sqlx/query-4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47.json
  "query": "\n                    SELECT\n                        number,\n                        timestamp,\n                        l1_tx_count,\n                        l2_tx_count,\n                        bloom,\n                        priority_ops_onchain_data,\n                        hash,\n                        commitment,\n                        eth_prove_tx_id,\n                        eth_commit_tx_id,\n                        eth_execute_tx_id,\n                        merkle_root_hash,\n                        l2_to_l1_logs,\n                        l2_to_l1_messages,\n                        used_contract_hashes,\n                        compressed_initial_writes,\n                        compressed_repeated_writes,\n                        l2_l1_merkle_root,\n                        rollup_last_leaf_index,\n                        zkporter_is_available,\n                        bootloader_code_hash,\n                        default_aa_code_hash,\n                        aux_data_hash,\n                        pass_through_data_hash,\n                        meta_parameters_hash,\n                        protocol_version,\n                        compressed_state_diffs,\n                        system_logs,\n                        events_queue_commitment,\n                        bootloader_initial_content_commitment,\n                        pubdata_input\n                    FROM\n                        l1_batches\n                        LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n                    WHERE\n                        eth_prove_tx_id IS NOT NULL\n                        AND eth_execute_tx_id IS NULL\n                    ORDER BY\n                        number\n                    LIMIT\n                        $1\n                    ",
========
  "query": "\n                    SELECT\n                        number,\n                        timestamp,\n                        l1_tx_count,\n                        l2_tx_count,\n                        bloom,\n                        priority_ops_onchain_data,\n                        hash,\n                        commitment,\n                        eth_prove_tx_id,\n                        eth_commit_tx_id,\n                        eth_execute_tx_id,\n                        l2_to_l1_logs,\n                        l2_to_l1_messages,\n                        used_contract_hashes,\n                        compressed_initial_writes,\n                        compressed_repeated_writes,\n                        l2_l1_merkle_root,\n                        rollup_last_leaf_index,\n                        zkporter_is_available,\n                        bootloader_code_hash,\n                        default_aa_code_hash,\n                        aux_data_hash,\n                        pass_through_data_hash,\n                        meta_parameters_hash,\n                        protocol_version,\n                        compressed_state_diffs,\n                        system_logs,\n                        events_queue_commitment,\n                        bootloader_initial_content_commitment,\n                        pubdata_input\n                    FROM\n                        l1_batches\n                        LEFT JOIN commitments ON commitments.l1_batch_number = l1_batches.number\n                    WHERE\n                        eth_prove_tx_id IS NOT NULL\n                        AND eth_execute_tx_id IS NULL\n                    ORDER BY\n                        number\n                    LIMIT\n                        $1\n                    ",
>>>>>>>> main:core/lib/dal/.sqlx/query-50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8.json
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "number",
        "type_info": "Int8"
      },
      {
        "ordinal": 1,
        "name": "timestamp",
        "type_info": "Int8"
      },
      {
        "ordinal": 2,
        "name": "l1_tx_count",
        "type_info": "Int4"
      },
      {
        "ordinal": 3,
        "name": "l2_tx_count",
        "type_info": "Int4"
      },
      {
        "ordinal": 4,
        "name": "bloom",
        "type_info": "Bytea"
      },
      {
        "ordinal": 5,
        "name": "priority_ops_onchain_data",
        "type_info": "ByteaArray"
      },
      {
        "ordinal": 6,
        "name": "hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 7,
        "name": "commitment",
        "type_info": "Bytea"
      },
      {
        "ordinal": 8,
        "name": "eth_prove_tx_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 9,
        "name": "eth_commit_tx_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 10,
        "name": "eth_execute_tx_id",
        "type_info": "Int4"
      },
      {
        "ordinal": 11,
        "name": "l2_to_l1_logs",
        "type_info": "ByteaArray"
      },
      {
        "ordinal": 12,
        "name": "l2_to_l1_messages",
        "type_info": "ByteaArray"
      },
      {
        "ordinal": 13,
        "name": "used_contract_hashes",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 14,
        "name": "compressed_initial_writes",
        "type_info": "Bytea"
      },
      {
        "ordinal": 15,
        "name": "compressed_repeated_writes",
        "type_info": "Bytea"
      },
      {
        "ordinal": 16,
        "name": "l2_l1_merkle_root",
        "type_info": "Bytea"
      },
      {
        "ordinal": 17,
        "name": "rollup_last_leaf_index",
        "type_info": "Int8"
      },
      {
        "ordinal": 18,
        "name": "zkporter_is_available",
        "type_info": "Bool"
      },
      {
        "ordinal": 19,
        "name": "bootloader_code_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 20,
        "name": "default_aa_code_hash",
        "type_info": "Bytea"
      },
      {
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c.json
        "ordinal": 22,
        "name": "evm_simulator_code_hash",
|||||||| 76a68217a:core/lib/dal/.sqlx/query-4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47.json
        "ordinal": 22,
        "name": "aux_data_hash",
========
        "ordinal": 21,
        "name": "aux_data_hash",
>>>>>>>> main:core/lib/dal/.sqlx/query-50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8.json
        "type_info": "Bytea"
      },
      {
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c.json
        "ordinal": 23,
        "name": "aux_data_hash",
|||||||| 76a68217a:core/lib/dal/.sqlx/query-4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47.json
        "ordinal": 23,
        "name": "pass_through_data_hash",
========
        "ordinal": 22,
        "name": "pass_through_data_hash",
>>>>>>>> main:core/lib/dal/.sqlx/query-50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8.json
        "type_info": "Bytea"
      },
      {
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c.json
        "ordinal": 24,
        "name": "pass_through_data_hash",
|||||||| 76a68217a:core/lib/dal/.sqlx/query-4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47.json
        "ordinal": 24,
        "name": "meta_parameters_hash",
========
        "ordinal": 23,
        "name": "meta_parameters_hash",
>>>>>>>> main:core/lib/dal/.sqlx/query-50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8.json
        "type_info": "Bytea"
      },
      {
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c.json
        "ordinal": 25,
        "name": "meta_parameters_hash",
        "type_info": "Bytea"
      },
      {
        "ordinal": 26,
|||||||| 76a68217a:core/lib/dal/.sqlx/query-4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47.json
        "ordinal": 25,
========
        "ordinal": 24,
>>>>>>>> main:core/lib/dal/.sqlx/query-50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8.json
        "name": "protocol_version",
        "type_info": "Int4"
      },
      {
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c.json
        "ordinal": 27,
|||||||| 76a68217a:core/lib/dal/.sqlx/query-4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47.json
        "ordinal": 26,
========
        "ordinal": 25,
>>>>>>>> main:core/lib/dal/.sqlx/query-50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8.json
        "name": "compressed_state_diffs",
        "type_info": "Bytea"
      },
      {
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c.json
        "ordinal": 28,
|||||||| 76a68217a:core/lib/dal/.sqlx/query-4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47.json
        "ordinal": 27,
========
        "ordinal": 26,
>>>>>>>> main:core/lib/dal/.sqlx/query-50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8.json
        "name": "system_logs",
        "type_info": "ByteaArray"
      },
      {
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c.json
        "ordinal": 29,
|||||||| 76a68217a:core/lib/dal/.sqlx/query-4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47.json
        "ordinal": 28,
========
        "ordinal": 27,
>>>>>>>> main:core/lib/dal/.sqlx/query-50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8.json
        "name": "events_queue_commitment",
        "type_info": "Bytea"
      },
      {
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c.json
        "ordinal": 30,
|||||||| 76a68217a:core/lib/dal/.sqlx/query-4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47.json
        "ordinal": 29,
========
        "ordinal": 28,
>>>>>>>> main:core/lib/dal/.sqlx/query-50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8.json
        "name": "bootloader_initial_content_commitment",
        "type_info": "Bytea"
      },
      {
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c.json
        "ordinal": 31,
|||||||| 76a68217a:core/lib/dal/.sqlx/query-4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47.json
        "ordinal": 30,
========
        "ordinal": 29,
>>>>>>>> main:core/lib/dal/.sqlx/query-50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8.json
        "name": "pubdata_input",
        "type_info": "Bytea"
      }
    ],
    "parameters": {
      "Left": [
        "Int8"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      false,
      false,
      false,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      true,
      false,
      true,
      true,
      true
    ]
  },
<<<<<<<< HEAD:core/lib/dal/.sqlx/query-0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c.json
  "hash": "0a755c875a7d590d7da35a7d2057b27fa3521e0fc15b98c89f2a41ddc19cb51c"
|||||||| 76a68217a:core/lib/dal/.sqlx/query-4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47.json
  "hash": "4aef05b8864484c6979c93d7ce3159cf509cf27adf9afdbe61bd867e536b7e47"
========
  "hash": "50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8"
>>>>>>>> main:core/lib/dal/.sqlx/query-50f1f9ababe67af63fab9b82294f709ec0333e6673ce43fedd00638b9252cbd8.json
}
